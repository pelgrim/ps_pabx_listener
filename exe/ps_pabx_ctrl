require 'daemons'
require 'ps_pabx_listener'

module PsPabxListener
  class Ctrl

    attr_accessor :ps_pabx_listener

    def initialize(data_dir)
      @ps_pabx_listener = PsPabxListener::Main.new(host: ENV['PS_PABX_HOST'],
                               user: ENV['PS_PABX_USER'],
                               password: ENV['PS_PABX_PASS'])
      @data_dir = data_dir
    end

    def run
      @ps_pabx_listener.each_data {|data| store_data(data, generate_filename)}
      # @ps_pabx_listener.each_data {|data| puts data}
    end

    def store_data data, filename
      File.open(File.join(@data_dir,filename), 'a') do |f|
        f.puts data
      end
    end

    def generate_filename
      Time.now.strftime("%Y%m%d") + (Time.now.hour / 12).to_s + ".txt"
    end

  end
end

ctrl = PsPabxListener::Ctrl.new(ENV['PS_PABX_DATA'])

Daemons.run_proc("pspabxd", {
  monitor: true,
  log_dir: ENV['PS_PABX_DATA']
  }) do

  Signal.trap("TERM") { ctrl.ps_pabx_listener.run = false }
  ctrl.run
end
